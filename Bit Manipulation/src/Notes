XOR -> even number of 1s -> 0  // if two bits are same -> 0
       odd number of 1s -> 1  // it two bits are different -> 1

      observation
      a ^ 1 = a` (a compliment)
      a ^ 0 = a
      a ^ a = 0

left shift(<<) : shift  position to left (add zeros at the right end)
10 << 1
1010 << 1 = 10100 (20)

| observation **** |
| a << 1 = 2a      |
| a<< b = a*2 pow b|


right shift(>>) : shift to the right
10 >> 1
1010 >> 1 = 101 (5)

| observation **** |
| a >> 1 = a%2     |
| a>> b = a/2 pow b|



